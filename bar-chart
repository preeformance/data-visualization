#html 

<div>
  <h1 id="title"> 
    Bar Chart  </h1> 
</div> 
    
#CSS
<style>
  .bar {
    width: 1px; 
    height: 10px; 
    margin: 1px; 
    
    display: inline-block;
    background-color: blue; 
    
}
.bar:hover {
  label:
}
  h1 {
    text-align: center; 
}
</style> 

#JavaScript
 
// data from json

fetch('https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json') 
  .then(response => response.json)
  .then(data => {
		document.getElementById('dataset').innerHTML = JSON.stringify(data);
	}) 

const svg = d3.select("body")
              .append(svg)
              .attr("width", 800)
              .attr("height", 500)

// frame setup

function barChart(dataset) {
  const height = 800;
  const width = 500;
  const padding = 30; 

const xScale = d3.scaleLinear()
                  .domain([d3.min(data, d => d[0]), d3.max(data, d => d[0])])
                  .range([padding, width-padding])
const yScale = d3.scaleLinear()
                  .domain([0, d3.max(data, d => d[1])])
                  .range([height-padding, padding])
} 

// bars

svg.selectAll("rect")
   .data(dataset)
   .enter() 
   .append("rect")
   .attr("class", "bar")
   .style("height", (d) => d)
   .attr("x", (d, i) => {
  return i * 2
})
   .attr("y", (d, i) => {
        return (h - 2 * d)
})
   .attr("width", 1)
   .attr("height",(d, i) => 2*d)
   .attr("fill", "blue")
   

// axis 

const xAxis = d3.axisBottom(xScale)
const yAxis = d3.axisLeft(yScale)

svg.append("g")
    .attr("id", "x-axis")
    .attr("transform", "translate(0, " + h - padding + ")")
     .call(xAxis) 
                 
svg.append("g")
    .attr("id", "y-axis")
    .attr("transform", "translate( + padding + ", 0")") 
    .call(yAxis) 
                 
              
